# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.button = QtWidgets.QPushButton(self.centralwidget)
        self.button.setGeometry(QtCore.QRect(140, 200, 381, 151))
        self.button.setObjectName("button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.button.clicked.connect(self.show_popup)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.button.setText(_translate("MainWindow", "Show Popup"))

    def show_popup(self):
        # need to create the message box object
        msg = QMessageBox()
        msg.setWindowTitle("Message Title")
        msg.setText("This is the message!")
        # 4 default icons pyQT provides
        # msg.setIcon(QMessageBox.Critical)
        # msg.setIcon(QMessageBox.Warning)
        # msg.setIcon(QMessageBox.Information)
        msg.setIcon(QMessageBox.Question)
        # button options seperated by a "|"
        # will select one as default (by some default hierarchy) that is selected/highlighted by default
        msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Retry | QMessageBox.Ignore)
        # to change the default highlighted one
        msg.setDefaultButton(QMessageBox.Cancel)
        # informative text is like the details and appears under the message texts
        msg.setInformativeText("Informative Text!")
        # adds a show/hide details feature
        msg.setDetailedText("MORE DETAILS AND STUFF!")
        # button clicked because i guess because it's a bit different since it's like a default button?
        msg.buttonClicked.connect(self.popup_buttons)
        # this is some voodoo to run the msg/create it much like window.show
        x = msg.exec_()

    # why i? because i is the button/widget object itself being
    # passed back into the function when the button is pressed
    # even tho you don't explicitly pass it
    def popup_buttons(self, i):
        print(i)
        print(i.text())



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
